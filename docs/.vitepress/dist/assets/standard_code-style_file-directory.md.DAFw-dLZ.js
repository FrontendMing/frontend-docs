import{_ as n,c as a,o as p,ae as e}from"./chunks/framework.Cd-3tpCq.js";const m=JSON.parse('{"title":"目录规范","description":"","frontmatter":{},"headers":[],"relativePath":"standard/code-style/file-directory.md","filePath":"standard/code-style/file-directory.md"}'),l={name:"standard/code-style/file-directory.md"};function i(t,s,c,o,d,r){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="目录规范" tabindex="-1">目录规范 <a class="header-anchor" href="#目录规范" aria-label="Permalink to &quot;目录规范&quot;">​</a></h1><h2 id="通用前端工程规范" tabindex="-1">通用前端工程规范 <a class="header-anchor" href="#通用前端工程规范" aria-label="Permalink to &quot;通用前端工程规范&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>├── build                       // 打包时的脚本</span></span>
<span class="line"><span>├── doc                         // 文档</span></span>
<span class="line"><span>├── node_modules                // 依赖</span></span>
<span class="line"><span>├── public                      // 公共资源</span></span>
<span class="line"><span>├── src</span></span>
<span class="line"><span>│   ├── api                     // 接口请求</span></span>
<span class="line"><span>│   ├── assets                  // 静态资源</span></span>
<span class="line"><span>│   ├── components              // 组件</span></span>
<span class="line"><span>│   ├── directive               // 指令</span></span>
<span class="line"><span>│   ├── enums                   // 枚举</span></span>
<span class="line"><span>│   ├── hooks                   // 公共hooks</span></span>
<span class="line"><span>│   ├── layout                  // Layout</span></span>
<span class="line"><span>│   ├── locales                 // 多语言</span></span>
<span class="line"><span>│   ├── plugins                 // 插件</span></span>
<span class="line"><span>│   ├── router                  // 路由</span></span>
<span class="line"><span>│   ├── stores                  // 存储</span></span>
<span class="line"><span>│   ├── styles                  // 样式</span></span>
<span class="line"><span>│   ├── utils                   // 工具类</span></span>
<span class="line"><span>│   ├── views                   // 视图</span></span>
<span class="line"><span>│   ├── App.vue                 // 入口文件</span></span>
<span class="line"><span>│   ├── main.ts                 // 入口TS文件 createApp</span></span>
<span class="line"><span>│   ├── shims.d.ts              // .vue文件类型声明</span></span>
<span class="line"><span>│   └── version.js              // 版本文件，tag自动增加</span></span>
<span class="line"><span>├── .editConfig                 // 配置统一编辑器</span></span>
<span class="line"><span>├── .env                        // 公共环境配置    </span></span>
<span class="line"><span>├── .env.development            // 开发环境配置</span></span>
<span class="line"><span>├── .env.test                   // 测试环境配置</span></span>
<span class="line"><span>├── .env.uat                    // uat环境配置</span></span>
<span class="line"><span>├── .env.production             // 生产环境配置</span></span>
<span class="line"><span>├── README.md</span></span>
<span class="line"><span>├── auto-imports.d.ts           // 自动导入配置</span></span>
<span class="line"><span>├── components.d.ts             // 组件自动导入配置</span></span>
<span class="line"><span>├── env.d.ts                    // vite/client ts配置</span></span>
<span class="line"><span>├── global.d.ts                 // 全局ts类型配置</span></span>
<span class="line"><span>├── index.html                  // 入口html文件</span></span>
<span class="line"><span>├── package.json                </span></span>
<span class="line"><span>├── pnpm-lock.yaml              </span></span>
<span class="line"><span>├── tsconfig.app.json            // ts配置文件</span></span>
<span class="line"><span>├── tsconfig.config.json         // ts配置文件</span></span>
<span class="line"><span>├── tsconfig.json                // ts公共配置文件</span></span>
<span class="line"><span>├── tsconfig.vitest.json         // vitest ts配置文件</span></span>
<span class="line"><span>└── vite.config.ts               // vite配置文件</span></span></code></pre></div>`,3)]))}const h=n(l,[["render",i]]);export{m as __pageData,h as default};
