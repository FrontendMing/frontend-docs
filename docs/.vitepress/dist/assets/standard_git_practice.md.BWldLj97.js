import{_ as t,c as e,o as i,ae as s}from"./chunks/framework.Cd-3tpCq.js";const _=JSON.parse('{"title":"Git 使用实战","description":"","frontmatter":{},"headers":[],"relativePath":"standard/git/practice.md","filePath":"standard/git/practice.md"}'),n={name:"standard/git/practice.md"};function r(o,a,p,c,l,d){return i(),e("div",null,a[0]||(a[0]=[s(`<h1 id="git-使用实战" tabindex="-1">Git 使用实战 <a class="header-anchor" href="#git-使用实战" aria-label="Permalink to &quot;Git 使用实战&quot;">​</a></h1><h2 id="_1、git迁移项目到其他代码仓库-且保留分支与提交记录。" tabindex="-1">1、git迁移项目到其他代码仓库，且保留分支与提交记录。 <a class="header-anchor" href="#_1、git迁移项目到其他代码仓库-且保留分支与提交记录。" aria-label="Permalink to &quot;1、git迁移项目到其他代码仓库，且保留分支与提交记录。&quot;">​</a></h2><h3 id="_1-1-问题场景" tabindex="-1">1.1 问题场景 <a class="header-anchor" href="#_1-1-问题场景" aria-label="Permalink to &quot;1.1 问题场景&quot;">​</a></h3><p>需要把Adobe代码仓库的某些项目，迁移到公司内部的代码仓库。且需要保留迁移项目的分支和提交记录。</p><h3 id="_1-2-迁移脚本" tabindex="-1">1.2 迁移脚本 <a class="header-anchor" href="#_1-2-迁移脚本" aria-label="Permalink to &quot;1.2 迁移脚本&quot;">​</a></h3><p>执行前需要，提前在其他代码仓库里新建好项目（New Project），得到 Rename repository Path。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone --bare ssh://需要迁移的项目地址/项目.git</span></span>
<span class="line"><span>cd 项目.git</span></span>
<span class="line"><span>git push --mirror ssh://其他代码仓库地址/新项目名称.git</span></span></code></pre></div><h3 id="_1-3-执行逻辑" tabindex="-1">1.3 执行逻辑 <a class="header-anchor" href="#_1-3-执行逻辑" aria-label="Permalink to &quot;1.3 执行逻辑&quot;">​</a></h3><p>1.根据远端仓库项目下载地址，clone指定项目的裸版本库到本地(自动创建裸版本库项目.git文件夹)；</p><p>2.进入需要迁移项目的裸版本库文件夹；</p><p>3.以镜像的方式推送到新项目中.</p>`,11)]))}const g=t(n,[["render",r]]);export{_ as __pageData,g as default};
