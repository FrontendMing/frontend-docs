import{_ as a,c as o,o as i,j as e,a as r}from"./chunks/framework.Cd-3tpCq.js";const v=JSON.parse('{"title":"ResizeObserver：监测DOM节点的变化","description":"","frontmatter":{},"headers":[],"relativePath":"performance/code/observer/resizeObserver.md","filePath":"performance/code/observer/resizeObserver.md"}'),t={name:"performance/code/observer/resizeObserver.md"};function n(d,s,c,l,b,p){return i(),o("div",null,s[0]||(s[0]=[e("h1",{id:"resizeobserver-监测dom节点的变化",tabindex:"-1"},[r("ResizeObserver：监测DOM节点的变化 "),e("a",{class:"header-anchor",href:"#resizeobserver-监测dom节点的变化","aria-label":'Permalink to "ResizeObserver：监测DOM节点的变化"'},"​")],-1),e("h2",{id:"引言",tabindex:"-1"},[r("引言 "),e("a",{class:"header-anchor",href:"#引言","aria-label":'Permalink to "引言"'},"​")],-1),e("p",null,[r("众所周知 window.resize 事件能帮我们监听窗口大小的变化。但是 reize 事件会在一秒内触发将近60次，所以很容易在改变窗口大小时导致性能问题。"),e("br"),r(" 换句话说，window.resize 事件通常是浪费的，因为它会监听每个元素的大小变化（只有 window 对象才有 resize 事件），而不是具体到某个元素的变化。如果我们只想监听某个元素的变化的话，这种操作就很浪费性能了。")],-1),e("p",null,"而ResizeObserver API就可以帮助我们：监听一个DOM节点的变化，这种变化包括但不仅限于：",-1),e("p",null,[r("1、某个节点的出现和隐藏"),e("br"),r(" 2、某个节点的大小变化")],-1)]))}const z=a(t,[["render",n]]);export{v as __pageData,z as default};
